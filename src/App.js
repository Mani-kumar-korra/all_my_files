import React, { useEffect, useState } from 'react';
import { fabric } from 'fabric';
import wholeImage from './whole.jpg';
import './style.css';

function App() {
  const [canvas, setCanvas] = useState(null);

  useEffect(() => {
    // Initialize Fabric.js canvas
    const fabricCanvas = new fabric.Canvas('canvas');
    setCanvas(fabricCanvas);

    // Load image onto the canvas
    fabric.Image.fromURL(wholeImage, function (img) {
      // Set canvas size to match image size
      fabricCanvas.setDimensions({
        width: img.width,
        height: img.height,
      });

      // Set canvas background with the image
      fabricCanvas.setBackgroundImage(img, fabricCanvas.renderAll.bind(fabricCanvas));
    });

    const mattressSVG = 'M0 0 C0.8969458 0.00454193 1.7938916 0.00908386 2.71801758 0.01376343 C22.96145053 0.13170997 43.0455314 1.85888285 63.1918335 3.70252991 C72.81070804 4.57392906 82.43944431 5.24007329 92.07583618 5.88290405 C150.83926629 9.82943636 150.83926629 9.82943636 160.25 18.5 C164.13631563 30.15894688 160.52460703 45.68039173 156.37109375 56.8671875 C154.91225142 58.99191257 153.47021164 59.74328551 151.1875 60.9375 C146.18463767 63.79114417 141.72095976 67.09559508 137.1875 70.625 C124.57639372 80.40921347 111.49824256 89.49320986 98.15234375 98.24365234 C96.20583241 99.5291692 94.27452558 100.83552276 92.34375 102.14453125 C71.29642166 116.27257262 49.47684373 125.89593353 25.27734375 132.99609375 C18.94510204 134.86784245 12.69416104 136.96275882 6.4453125 139.09375 C3.88621411 139.96414439 1.33768838 140.76820742 -1.2578125 141.53125 C-13.57185879 145.23387895 -24.86175886 151.16857658 -36.36230469 156.84082031 C-40.41435322 158.82537795 -44.49110682 160.7537673 -48.57250977 162.67700195 C-68.44889186 172.06023347 -87.81605739 182.4214154 -107.06396484 193.02392578 C-109.8471949 194.55341214 -112.63588062 196.07256297 -115.42578125 197.58984375 C-117.24223726 198.58063794 -119.05864536 199.57151998 -120.875 200.5625 C-121.71071533 201.0157666 -122.54643066 201.4690332 -123.4074707 201.93603516 C-124.1830835 202.36062012 -124.95869629 202.78520508 -125.7578125 203.22265625 C-126.43473145 203.59140869 -127.11165039 203.96016113 -127.80908203 204.34008789 C-129.82578889 205.49905052 -129.82578889 205.49905052 -131.85766602 207.08300781 C-139.2964173 212.65319391 -150.93753256 212.62768278 -159.75 211.5 C-162.95538575 210.78580544 -166.08103665 209.85534713 -169.22265625 208.90234375 C-171.09494433 208.351115 -172.96734473 207.80026764 -174.83984375 207.24975586 C-175.81058838 206.96147919 -176.78133301 206.67320251 -177.78149414 206.37619019 C-182.69991184 204.92446008 -187.63340085 203.52619746 -192.56640625 202.125 C-193.58383911 201.83525299 -194.60127197 201.54550598 -195.64953613 201.24697876 C-222.64387843 193.56140208 -249.6984815 186.13102645 -276.81591797 178.89253235 C-283.28754732 177.16369404 -289.75353622 175.41544336 -296.21484375 173.6484375 C-312.56944385 169.17945623 -328.93732405 164.87580388 -345.4375 160.97265625 C-346.98824219 160.59971436 -346.98824219 160.59971436 -348.5703125 160.21923828 C-350.80426552 159.71392305 -353.05109751 159.26390799 -355.3046875 158.85498047 C-364.06834683 157.17763754 -364.06834683 157.17763754 -367.40234375 153.86328125 C-369.01335085 149.84276789 -370.28459694 145.8927141 -371.3125 141.6875 C-371.52084473 140.86233887 -371.72918945 140.03717773 -371.94384766 139.18701172 C-373.33731099 133.53220583 -374.56450307 127.85143106 -375.625 122.125 C-375.75720947 121.43043701 -375.88941895 120.73587402 -376.02563477 120.02026367 C-376.67574757 116.24923766 -376.92881389 113.1681527 -375.75 109.5 C-373.6875 107.0625 -373.6875 107.0625 -370.75 104.5 C-370.22792969 104.025625 -369.70585937 103.55125 -369.16796875 103.0625 C-356.16405616 92.18340973 -336.55564306 88.96837602 -320.6519928 84.3405304 C-318.60655052 83.74462505 -316.56189094 83.14610473 -314.51745605 82.54675293 C-293.00534797 76.24149219 -271.4572867 70.10113689 -249.75 64.5 C-248.63657227 64.20738281 -247.52314453 63.91476563 -246.37597656 63.61328125 C-224.63246677 57.92538738 -202.46739154 54.38563321 -180.2578125 51.0703125 C-141.8166804 45.31116484 -107.25331427 35.60648445 -71.40600586 20.40771484 C-62.52087023 16.64157795 -53.60092971 12.9820461 -44.625 9.4375 C-42.96513062 8.77633179 -42.96513062 8.77633179 -41.27172852 8.10180664 C-38.11107039 6.86196131 -34.93621726 5.67242838 -31.75 4.5 C-30.24953125 3.91726318 -30.24953125 3.91726318 -28.71875 3.32275391 C-19.13842126 -0.07530665 -10.03388988 -0.11890099 0 0 Z';
    const mattress = new fabric.Path(mattressSVG, {
      left: 50,
      top: 50,
      width: 100,
      height: 100,
      fill:'#282828',
      opacity: 0.8, 
    });

    fabricCanvas.add(mattress);
  }, []); // Empty dependency array ensures this useEffect runs only once on component mount

  const changeColor = (color, alpha) => {
    if (canvas && canvas.getObjects().length > 0) {
      const mattressObject = canvas.getObjects()[0];
      mattressObject.set({
        fill: color,
        opacity: alpha, // Set the opacity (alpha) of the color
      });
  
      canvas.renderAll();
    }
  };
  

  return (
    <div>
      <h1>Your React App</h1>
      <canvas id="canvas"></canvas>

      <div>
        <button onClick={() => changeColor('#373635', 0.7)}>Gray (Transparent)</button>
        <button onClick={() => changeColor('#046489', 0.7)}>Blue (Transparent)</button>
        <button onClick={() => changeColor('#60371', 0.7)}>Black (Transparent)</button>
        <button onClick={() => changeColor('#f34976', 0.7)}>Pink (Transparent)</button>
        <button onClick={() => changeColor('#5e3a8c', 0.7 )}>Purple (Transparent)</button>
      </div>
    </div>
  );
}

export default App;